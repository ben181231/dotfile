# homebrew
if [[ -s "/opt/homebrew/bin/brew" ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)";
fi

# gitignore.io CLI
function gi() {
  curl -L -s https://www.gitignore.io/api/$@ ;
}

# hub CLI
if which hub > /dev/null; then
  eval "$(hub alias -s)";
fi

# pyenv
if which pyenv > /dev/null; then
  export PYENV_ROOT="$HOME/.pyenv";
  export PATH="$PYENV_ROOT/bin:$PATH";
  eval "$(pyenv init --path)";
  eval "$(pyenv init -)";
fi

# nvm
export NVM_DIR="$HOME/.nvm"
if [[ -s "/usr/local/opt/nvm/nvm.sh" ]]; then
  source "/usr/local/opt/nvm/nvm.sh";
fi
if [[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ]]; then
  source "/usr/local/opt/nvm/etc/bash_completion.d/nvm";
fi

# nodenv
if which nodenv > /dev/null; then
  eval "$(nodenv init -)"
fi

# rbenv
if which rbenv > /dev/null; then
  eval "$(rbenv init -)";
fi

# direnv
if which direnv > /dev/null; then
  eval "$(direnv hook zsh)";
fi

# fasd
if which fasd > /dev/null; then
  eval "$(fasd --init auto)";
fi

# k3d
if which k3d > /dev/null; then
  eval "$(k3d completion zsh)";
fi

# deno
if which deno > /dev/null; then
  export PATH=$HOME/.deno/bin:$PATH;
fi

# haskell stack
if which stack > /dev/null; then
  eval "$(stack --bash-completion-script stack)";
fi

# anyenv
if which anyenv > /dev/null; then
  alias getanyenv='eval "$(anyenv init -)"';
fi

# Minikube
if [[ $commands[minikube] ]]; then
  source <(minikube completion zsh)
fi

# GCloud CLI Auto Completion
if [[ -s "$HOME/gcloud/path.zsh.inc" ]]; then
  source "$HOME/gcloud/path.zsh.inc";
fi
if [[ -s "$HOME/gcloud/completion.zsh.inc" ]]; then
  source "$HOME/gcloud/completion.zsh.inc";
fi

# App Engine
if [[ -e "$HOME/gcloud/platform/google_appengine" ]]; then
  PATH="$HOME/gcloud/platform/google_appengine:$PATH";
fi

# ghcup-env
if [[ -s "$HOME/.ghcup/env" ]]; then
  source "$HOME/.ghcup/env";
fi

#zsh-syntax-highlight
if [[ -s "/opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]]; then
  source "/opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh";
fi

#zsh-autosuggestions
if [[ -s "/opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]]; then
  export ZSH_AUTOSUGGEST_STRATEGY=(completion history)
  source "/opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh";
fi
